services:
  users_db:
    container_name: ${POSTGRES_HOST}
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./users_db/data/:/var/lib/postgresql/data
      - ./users_db/init_migrations:/docker-entrypoint-initdb.d
    networks:
      - main-services-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      - users_db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5050:80
    networks:
      - main-services-network
  
  main_service_core:
    container_name: main_service_core
    build: ./core
    restart: unless-stopped
    depends_on:
      - users_db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - 8080:8081
    networks:
      - main-services-network


networks:
  main-services-network:
    driver: bridge
