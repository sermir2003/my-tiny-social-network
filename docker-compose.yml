networks:
  commin-network:
    driver: bridge


services:
  common_pgadmin:
    container_name: common_pgadmin
    image: dpage/pgadmin4:8
    restart: unless-stopped
    depends_on:
      - users_db
      - ugc_db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - commin-network

  users_db:
    container_name: ${USERS_DB_HOST}
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${USERS_DB_DB}
      POSTGRES_USER: ${USERS_DB_USER}
      POSTGRES_PASSWORD: ${USERS_DB_PASSWORD}
    volumes:
      - ./main_service/users_db/data/:/var/lib/postgresql/data
      - ./main_service/users_db/init_migrations:/docker-entrypoint-initdb.d
    networks:
      - commin-network
  
  main_core:
    container_name: main_core
    build: ./main_service/core
    restart: unless-stopped
    depends_on:
      - users_db
      - ugc_core
    environment:
      POSTGRES_HOST: ${USERS_DB_HOST}
      POSTGRES_PORT: ${USERS_DB_PORT}
      POSTGRES_USER: ${USERS_DB_USER}
      POSTGRES_PASSWORD: ${USERS_DB_PASSWORD}
      POSTGRES_DB: ${USERS_DB_DB}
      JWT_SECRET: ${JWT_SECRET}
      MAIN_SERVICE_PORT: ${MAIN_SERVICE_PORT}
      UGC_SERVICE_PORT: ${UGC_SERVICE_PORT}
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
    ports:
      - ${SOCIAL_NETWORK_PORT}:${MAIN_SERVICE_PORT}
    networks:
      - commin-network

  ugc_db:
    container_name: ${UGC_DB_HOST}
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${UGC_DB_DB}
      POSTGRES_USER: ${UGC_DB_USER}
      POSTGRES_PASSWORD: ${UGC_DB_PASSWORD}
    volumes:
      - ./ugc_service/ugc_db/data/:/var/lib/postgresql/data
      - ./ugc_service/ugc_db/init_migrations:/docker-entrypoint-initdb.d
    networks:
      - commin-network
  
  ugc_core:
    container_name: ugc_core
    build: ./ugc_service/core
    restart: unless-stopped
    depends_on:
      - ugc_db
    environment:
      POSTGRES_HOST: ${UGC_DB_HOST}
      POSTGRES_PORT: ${UGC_DB_PORT}
      POSTGRES_USER: ${UGC_DB_USER}
      POSTGRES_PASSWORD: ${UGC_DB_PASSWORD}
      POSTGRES_DB: ${UGC_DB_DB}
      UGC_SERVICE_PORT: ${UGC_SERVICE_PORT}
      TIME_ZONE: ${UGC_TIME_ZONE}
    networks:
      - commin-network

  stats_db:
    container_name: stats_db
    image: clickhouse/clickhouse-server:24
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: ${STATS_DB_DB}
      CLICKHOUSE_USER: ${STATS_DB_USER}
      CLICKHOUSE_PASSWORD: ${STATS_DB_PASSWORD}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - ./stats_service/stats_db/data/:/var/lib/clickhouse
      - ./stats_service/stats_db/init_migrations:/docker-entrypoint-initdb.d
    ports:
      - ${STATS_DB_HTTP_PORT}:8123
    networks:
      - commin-network

  tabix:
    container_name: tabix
    image: spoonest/clickhouse-tabix-web-client:stable
    restart: unless-stopped
    depends_on:
      - stats_db
    ports:
      - ${TABIX_PORT}:80
    networks:
      - commin-network
  
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
    networks:
      - commin-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - commin-network

  stats_core:
    container_name: stats_core
    build: ./stats_service/core
    restart: unless-stopped
    depends_on:
      - stats_db
    environment:
      STATS_DB_HOST: ${STATS_DB_HOST}
      STATS_DB_PORT: ${STATS_DB_PORT}
      STATS_DB_USER: ${STATS_DB_USER}
      STATS_DB_PASSWORD: ${STATS_DB_PASSWORD}
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      STATS_SERVICE_HTTP_PORT: ${STATS_SERVICE_HTTP_PORT}
    ports:
      - ${STATS_SERVICE_HTTP_PORT}:${STATS_SERVICE_HTTP_PORT}
    networks:
      - commin-network
